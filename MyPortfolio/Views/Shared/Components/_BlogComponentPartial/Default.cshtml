<section id="blog" class="s-blog target-section">

    <div class="row narrow section-intro has-bottom-sep">
        <div class="col-full">
            <h3>Journal</h3>
            <h1>Yazılımın Derinliklerine Yolculuk.</h1>
            <p class="lead">
                Yazılım geliştirme süreçlerini daha iyi anlamak, yeni teknolojilerle tanışmak ve uzmanlardan değerli
                ipuçları almak için doğru yerdesiniz. Kodlama pratiklerinden mimari tasarımlara, veri tabanlarından
                optimizasyon tekniklerine kadar geniş bir yelpazede bilgi dolu içeriklerle karşınızdayız. Her seviyeden
                geliştiriciye hitap eden rehberlerimizle yazılım dünyasında bir adım öne geçin!
            </p>
        </div>
    </div>

    <div class="row blog-content">
        <div class="col-full">

            <div class="blog-list block-1-2 block-tab-full">
                <article class="col-block">

                    <div class="blog-date">
                        <a href="blog-single.html">Sept 16, 2024</a>
                    </div>

                    <h2 class="h01"><a href="blog-single.html">Dependency injection nedir?.</a></h2>
                    <p>
                        Dependency Injection (DI), yazılım geliştirme sürecinde sık sık kullanılan bir tasarım
                        desenidir. Bu
                        desen, bir nesnenin ihtiyaç duyduğu bağımlılıkları dışarıdan almasına ve sınıfın içinde doğrudan
                        oluşturulmamasına izin verir.
                    </p>

                    <div class="blog-cat">
                        <a href="blog.html">Branding</a><a href="blog.html">Design</a>
                    </div>


                </article>
                <article class="col-block">

                    <div class="blog-date">
                        <a href="blog-single.html">Sept 15, 2024</a>
                    </div>

                    <h2 class="h01"><a href="blog-single.html">CQRS Design Pattern nedir?.</a></h2>
                    <p>
                        CQRS, "Command Query Responsibility Segregation" (Komut Sorgu Sorumluluğu Ayrımı) kelimelerinin
                        baş harflerinden oluşan bir tasarım desenidir. Bu desen, bir uygulama veya sistemdeki komutları
                        (command) ve sorguları (query) ayrı ayrı ele almayı önerir
                    </p>

                    <div class="blog-cat">
                        <a href="blog.html">Photography</a>
                    </div>


                </article>
                <article class="col-block">

                    <div class="blog-date">
                        <a href="blog-single.html">Sept 14, 2024</a>
                    </div>

                    <h2 class="h01"><a href="blog-single.html">Partial class nedir?.</a></h2>
                    <p>
                        Partial sınıflar, C# programlama dilindeki bir özelliktir. Bir sınıfı bölümlere ayırmak ve
                        farklı dosyalarda tanımlamak için kullanılırlar. Partial sınıflar, aynı sınıfa ait kodun farklı
                        dosyalarda veya ayrı bölmelerde dağıtılmasına izin verir.
                        Bu özellik, büyük ölçekli projelerde sınıfların daha iyi organize edilmesini sağlar ve birden
                        fazla geliştirici aynı sınıf üzerinde çalışırken çakışmaları azaltır. Örneğin, bir sınıfın
                        uygulama mantığını, arayüz tanımlarını veya veritabanı işlemlerini farklı dosyalarda belirli
                        bölümlere ayırabilirsiniz.
                    </p>

                    <div class="blog-cat">
                        <a href="blog.html">Branding</a><a href="blog.html">Wordpress</a>
                    </div>
                </article>
                <article class="col-block">

                    <div class="blog-date">
                        <a href="blog-single.html">Sept 12, 2024</a>
                    </div>
                    <h2 class="h01"><a href="blog-single.html">Elasticsearch nedir?.</a></h2>
                    <p>
                        Elasticsearch, açık kaynaklı bir arama ve analiz motorudur ve büyük miktardaki verileri işlemek
                        ve aramak için kullanılır. Elasticsearch, bir ilişkisel veritabanından farklıdır ve verileri
                        JSON belgeleri olarak saklar.
                    </p>

                    <div class="blog-cat">
                        <a href="blog.html">Design</a><a href="blog.html">Branding</a>
                    </div>
                </article>
            </div>
        </div>
    </div>

</section>